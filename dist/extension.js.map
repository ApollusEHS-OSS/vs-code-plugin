{"version":3,"sources":["../webpack/bootstrap",".././node_modules/connected-domain/index.js",".././node_modules/connected-domain/lib/connected-domain.js",".././node_modules/ps-node/index.js",".././node_modules/ps-node/lib/index.js",".././node_modules/table-parser/index.js",".././node_modules/table-parser/lib/index.js",".././src/extension.ts","../external \"child_process\"","../external \"events\"","../external \"os\"","../external \"url\"","../external \"vscode\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,iBAAiB,mBAAO,EAAE,uFAAwB,G;;;;;;;;;;;ACAlD;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY,OAAO,GAAG,YAAY,2BAA2B,aAAa,sBAAsB,EAAE,qCAAqC;AACvI;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;AC/PA,iBAAiB,mBAAO,CAAC,kDAAO;;;;;;;;;;;;ACAhC,mBAAmB,mBAAO,CAAC,oCAAe;AAC1C;AACA,kBAAkB,mBAAO,CAAC,0DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,cAAI;;AAE5B;AACA;AACA,UAAU;AACV,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,WAAW;AAC/B;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACpSA,iBAAiB,mBAAO,EAAE,6DAAa,G;;;;;;;;;;;ACAvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,kEAAkB;AAChD;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","module.exports = require( './lib/connected-domain' );","/**\n * calculate all the connected domains based on the given two-dimensional array\n */\n\n/**\n * @param {Array} tdArray\n * @param {Function} indicator It receive the raw point data as the first parameter and decide what kind of domain the point belongs to, it should return a string as a domain identifier.\n * @param {Boolean} hardlink If use hard link. Default to false.\n * @return {Object} [{ bounding: { w: 12, h: 19, x: 0, y: 1 }, points: [ { x: 1, y: 2, point: {} } ], identifier: 'blue', domainId: 1 } ]\n */\nmodule.exports = function( tdArray, indicator, hardlink ){\n\n    hardlink = hardlink || false;\n\n    if( !tdArray ){\n        throw new Error( 'tdArray must be provided' );\n    }\n\n    if( !indicator ){\n        throw new Error( 'indicator must be provided' );\n    }\n\n    // clone 一份数据，因为需要对饮用进行修改，方便执行\n    tdArray = JSON.parse( JSON.stringify( tdArray ) );\n\n    // Result\n    var domains = {};\n    var domainUUID = 0;\n    var pointsHash = {};\n\n    // 遍历数组，划分domain\n\n    tdArray.forEach(function( row, y ){\n\n        row.forEach(function( colItem, x ){\n\n            // get the current point identifier.\n            var identifier = indicator( colItem, x, y );\n\n            // get neighbours\n            // Except for Undefined every data type is valid.\n            var neighbours = [];\n\n            // top neighbour\n            if( tdArray[ y - 1 ] && tdArray[ y - 1 ][ x ] !== undefined ){\n                neighbours.push( pointsHash[ x + '_' + ( y - 1 ) ] );\n            }\n\n            // left neighbour\n            if( row[ x - 1 ] !== undefined ){\n                neighbours.push( pointsHash[ ( x - 1 ) + '_' + y ] );\n            }\n\n            // soft link will treat corner link as domain link.\n            if( !hardlink ){\n                // top left neighbour\n                if( tdArray[ y - 1 ] && tdArray[ y - 1 ][ x - 1 ] !== undefined ){\n                    neighbours.push( pointsHash[ ( x - 1 ) + '_' + ( y - 1 ) ] );\n                }\n\n                // top right neighbour\n                if( tdArray[ y - 1 ] && tdArray[ y - 1 ][ x + 1 ] !== undefined ){\n                    neighbours.push( pointsHash[ ( x + 1 ) + '_' + ( y - 1 ) ] );\n                }\n            }\n\n            if( neighbours.length ){\n                var matched = false;\n\n                neighbours.forEach(function( neighbour ){\n\n                    if( neighbour.identifier == identifier ){\n\n                        // If the neighbour is the first neighbour has the same identifier\n                        if( !matched ){\n                            addPointToDomain( colItem, x, y, neighbour.domainId );\n                            matched = true;\n                        }\n\n                        // If more than one neighbour matched, check if these neighbours belong to the same domain\n                        // If not, merge these domains since they connects to each other.\n                        else {\n                            var colItemPoint = pointsHash[ x + '_' + y ];\n                            if( neighbour.domainId != colItemPoint.domainId ){\n                                mergeDomains( neighbour.domainId, colItemPoint.domainId );\n                            }\n                        }\n                    }\n                });\n\n                if( !matched ){\n                    addNewDomain( colItem, x, y, identifier );\n                }\n            }\n            else {\n                addNewDomain( colItem, x, y, identifier );\n            }\n        });\n    });\n\n    // some summary\n    var result = {\n        domains: [],\n        totalDomains: 0,\n        groupByIdentifier: {},\n        totalIdentifiers: 0\n    };\n\n    var domainId = null;\n    var identifier = null;\n    var domain = null;\n    for( domainId in domains ){\n        domain = domains[ domainId ];\n        domain.bounding = calculateBounding( domain.points );\n        identifier = domain.identifier;\n\n        result.domains.push( domain );\n        result.totalDomains++;\n\n        if( !( identifier in result.groupByIdentifier ) ){\n            result.groupByIdentifier[ identifier ] = [];\n            result.totalIdentifiers++;\n        }\n\n        result.groupByIdentifier[ identifier ].push( domain );\n    }\n\n\n    function calculateBounding( points ){\n\n        var minX = null;\n        var minY = null;\n        var maxX = null;\n        var maxY = null;\n\n        points.forEach(function( point ){\n\n            if( minX === null || point.x < minX ){\n                minX = point.x;\n            }\n\n            if( minY === null || point.y < minY ){\n                minY = point.y;\n            }\n\n            if( maxX === null || point.x > maxX ){\n                maxX = point.x;\n            }\n\n            if( maxY === null || point.y > maxY ){\n                maxY = point.y;\n            }\n        });\n\n        var w = maxX - minX;\n        var h = maxY - minY;\n\n        return {\n            x: minX,\n            y: minY,\n            w: w,\n            h: h\n        };\n    }\n\n    /**\n     *\n     * @param point\n     * @param x\n     * @param y\n     * @param identifier\n     */\n    function addNewDomain( point, x, y, identifier ){\n\n        var newDomain = {\n            identifier: identifier,\n            domainId: ++domainUUID,\n            bounding: {},\n            points: []\n        };\n\n        var newPoint = {\n            value: point,\n            x: x,\n            y: y,\n            identifier: identifier,\n            domainId: newDomain.domainId\n        };\n\n        pointsHash[ x + '_' + y ] = {\n            value: point,\n            identifier: identifier,\n            domainId: newDomain.domainId\n        };\n\n        newDomain.points.push( newPoint );\n\n        domains[ newDomain.domainId ] = newDomain;\n    }\n\n    /**\n     * add a point to a existing domain, and attach properties domainId and identifier to point.\n     * @param point\n     * @param x\n     * @param y\n     * @param domainId\n     */\n    function addPointToDomain( point, x, y, domainId ){\n\n        var domain = domains[ domainId ];\n        var newPoint = {\n            value: point,\n            x: x,\n            y: y,\n            identifier: domain.identifier,\n            domainId: domainId\n        };\n\n        pointsHash[ x + '_' + y ] = {\n            value: point,\n            identifier: domain.identifier,\n            domainId: domainId\n        };\n\n        domain.points.push( newPoint );\n    }\n\n    /**\n     * 将 domainB 合并到 domainA\n     * @param domainAId\n     * @param domainBId\n     */\n    function mergeDomains( domainAId, domainBId ){\n\n        var domainA = domains[ domainAId ];\n        var domainB = domains[ domainBId ];\n\n        if( domainA.identifier == domainB.identifier ){\n            // 更新 domainB 的domainId\n\n            domainB.domainId = domainA.domainId;\n\n            domainB.points.forEach(function( point ){\n                point.domainId = domainA.domainId;\n                pointsHash[ point.x + '_' + point.y ].domainId = domainA.domainId;\n            });\n\n            domainA.points = domainA.points.concat( domainB.points );\n\n            // 删除domainB\n            delete domains[ domainBId ];\n        }\n    }\n\n    return result;\n};","module.exports = require('./lib');\n","var ChildProcess = require('child_process');\nvar IS_WIN = process.platform === 'win32';\nvar TableParser = require('table-parser');\n/**\n * End of line.\n * Basically, the EOL should be:\n * - windows: \\r\\n\n * - *nix: \\n\n * But i'm trying to get every possibilities covered.\n */\nvar EOL = /(\\r\\n)|(\\n\\r)|\\n|\\r/;\nvar SystemEOL = require('os').EOL;\n\n/**\n * Execute child process\n * @type {Function}\n * @param {String[]} args\n * @param {Function} callback\n * @param {Object=null} callback.err\n * @param {Object[]} callback.stdout\n */\n\nvar Exec = module.exports = exports = function (args, callback) {\n  var spawn = ChildProcess.spawn;\n\n  // on windows, if use ChildProcess.exec(`wmic process get`), the stdout will gives you nothing\n  // that's why I use `cmd` instead\n  if (IS_WIN) {\n\n    var CMD = spawn('cmd');\n    var stdout = '';\n    var stderr = null;\n\n    CMD.stdout.on('data', function (data) {\n      stdout += data.toString();\n    });\n\n    CMD.stderr.on('data', function (data) {\n\n      if (stderr === null) {\n        stderr = data.toString();\n      }\n      else {\n        stderr += data.toString();\n      }\n    });\n\n    CMD.on('exit', function () {\n\n      var beginRow;\n      stdout = stdout.split(EOL);\n\n      // Find the line index for the titles\n      stdout.forEach(function (out, index) {\n        if (out && typeof beginRow == 'undefined' && out.indexOf('CommandLine') === 0) {\n          beginRow = index;\n        }\n      });\n\n      // get rid of the start (copyright) and the end (current pwd)\n      stdout.splice(stdout.length - 1, 1);\n      stdout.splice(0, beginRow);\n\n      callback(stderr, stdout.join(SystemEOL) || false);\n    });\n\n    CMD.stdin.write('wmic process get ProcessId,ParentProcessId,CommandLine \\n');\n    CMD.stdin.end();\n  }\n  else {\n    if (typeof args === 'string') {\n      args = args.split(/\\s+/);\n    }\n    const child = spawn('ps', args);\n    var stdout = '';\n    var stderr = null;\n\n    child.stdout.on('data', function (data) {\n      stdout += data.toString();\n    });\n\n    child.stderr.on('data', function (data) {\n\n      if (stderr === null) {\n        stderr = data.toString();\n      }\n      else {\n        stderr += data.toString();\n      }\n    });\n\n    child.on('exit', function () {\n      if (stderr) {\n        return callback(stderr.toString());\n      }\n      else {\n        callback(null, stdout || false);\n      }\n    });\n  }\n};\n\n/**\n * Query Process: Focus on pid & cmd\n * @param query\n * @param {String|String[]} query.pid\n * @param {String} query.command RegExp String\n * @param {String} query.arguments RegExp String\n * @param {String|array} query.psargs\n * @param {Function} callback\n * @param {Object=null} callback.err\n * @param {Object[]} callback.processList\n * @return {Object}\n */\n\nexports.lookup = function (query, callback) {\n\n  /**\n   * add 'lx' as default ps arguments, since the default ps output in linux like \"ubuntu\", wont include command arguments\n   */\n  var exeArgs = query.psargs || ['lx'];\n  var filter = {};\n  var idList;\n\n  // Lookup by PID\n  if (query.pid) {\n\n    if (Array.isArray(query.pid)) {\n      idList = query.pid;\n    }\n    else {\n      idList = [query.pid];\n    }\n\n    // Cast all PIDs as Strings\n    idList = idList.map(function (v) {\n      return String(v);\n    });\n\n  }\n\n\n  if (query.command) {\n    filter['command'] = new RegExp(query.command, 'i');\n  }\n\n  if (query.arguments) {\n    filter['arguments'] = new RegExp(query.arguments, 'i');\n  }\n\n  if (query.ppid) {\n    filter['ppid'] = new RegExp(query.ppid);\n  }\n\n  return Exec(exeArgs, function (err, output) {\n    if (err) {\n      return callback(err);\n    }\n    else {\n      var processList = parseGrid(output);\n      var resultList = [];\n\n      processList.forEach(function (p) {\n\n        var flt;\n        var type;\n        var result = true;\n\n        if (idList && idList.indexOf(String(p.pid)) < 0) {\n          return;\n        }\n\n        for (type in filter) {\n          flt = filter[type];\n          result = flt.test(p[type]) ? result : false;\n        }\n\n        if (result) {\n          resultList.push(p);\n        }\n      });\n\n      callback(null, resultList);\n    }\n  });\n};\n\n/**\n * Kill process\n * @param pid\n * @param {Object|String} signal\n * @param {String} signal.signal\n * @param {number} signal.timeout\n * @param next\n */\n\nexports.kill = function( pid, signal, next ){\n  //opts are optional\n  if(arguments.length == 2 && typeof signal == 'function'){\n    next = signal;\n    signal = undefined;\n  }\n\n  var checkTimeoutSeconds = (signal && signal.timeout) || 30;\n\n  if (typeof signal === 'object') {\n    signal = signal.signal;\n  }\n\n  try {\n    process.kill(pid, signal);\n  } catch(e) {\n    return next && next(e);\n  }\n\n  var checkConfident = 0;\n  var checkTimeoutTimer = null;\n  var checkIsTimeout = false;\n\n  function checkKilled(finishCallback) {\n    exports.lookup({ pid: pid }, function(err, list) {\n      if (checkIsTimeout) return;\n\n      if (err) {\n        clearTimeout(checkTimeoutTimer);\n        finishCallback && finishCallback(err);\n      } else if(list.length > 0) {\n        checkConfident = (checkConfident - 1) || 0;\n        checkKilled(finishCallback);\n      } else {\n        checkConfident++;\n        if (checkConfident === 5) {\n          clearTimeout(checkTimeoutTimer);\n          finishCallback && finishCallback();\n        } else {\n          checkKilled(finishCallback);\n        }\n      }\n    });\n  }\n\n  next && checkKilled(next);\n\n  checkTimeoutTimer = next && setTimeout(function() {\n    checkIsTimeout = true;\n    next(new Error('Kill process timeout'));\n  }, checkTimeoutSeconds * 1000);\n};\n\n/**\n * Parse the stdout into readable object.\n * @param {String} output\n */\n\nfunction parseGrid(output) {\n  if (!output) {\n    return [];\n  }\n  return formatOutput(TableParser.parse(output));\n}\n\n/**\n * format the structure, extract pid, command, arguments, ppid\n * @param data\n * @return {Array}\n */\n\nfunction formatOutput(data) {\n  var formatedData = [];\n  data.forEach(function (d) {\n    var pid = ( d.PID && d.PID[0] ) || ( d.ProcessId && d.ProcessId[0] ) || undefined;\n    var cmd = d.CMD || d.CommandLine || d.COMMAND || undefined;\n    var ppid = ( d.PPID && d.PPID[0] ) || ( d.ParentProcessId && d.ParentProcessId[0] ) || undefined;\n\n    if (pid && cmd) {\n      var command = cmd[0];\n      var args = '';\n\n      if (cmd.length > 1) {\n        args = cmd.slice(1);\n      }\n\n      formatedData.push({\n        pid: pid,\n        command: command,\n        arguments: args,\n        ppid: ppid\n      });\n    }\n  });\n\n  return formatedData;\n}\n","module.exports = require( './lib/index' );","/**\n *\n * 1, define the edge ( begin and end ) of every title field\n * 2, parse all the lines except the title line, get all the connected-domains\n * 3, group all the connected-domains vertically overlapped.\n * 4, a domain group belongs to a title field if they vertically overlapped\n * 5, calculate all the edge info through the group domain and title field relations.\n */\nvar ConnectedDomain = require('connected-domain');\nvar EMPTY_EX = /\\s/;\n\n/**\n * The output sting of cmd to parse\n * @param output\n * @returns {Array}\n */\nmodule.exports.parse = function (output) {\n\n  // Split into lines\n  // Basically, the EOL should be:\n  // - windows: \\r\\n\n  // - *nix: \\n\n  // But i'm trying to get every possibilities covered.\n  var linesTmp = output.split(/(\\r\\n)|(\\n\\r)|\\n|\\r/);\n\n  // valid lines\n  var lines = [];\n  // title field info, mapped with filed name.\n  var titleInfo = {};\n  // the two dimensional array of the lines\n  var twoDimArray = [];\n\n  // get rid of all the empty lines.\n  linesTmp.forEach(function (line) {\n    if (line && line.trim()) {\n      lines.push(line);\n    }\n  });\n\n  // build title fields edge info\n  // build two dimensional array for Connected-Domain to parse.\n  lines.forEach(function (line, index) {\n\n    // Treat the first line as the title fields line\n    if (index == 0) {\n      var fields = line.split(/\\s+/);\n\n      // record the beginning and ending for each field\n      fields.forEach(function (field, idx) {\n\n        if (field) {\n          var info = titleInfo[field] = {};\n          var indexBegin = line.indexOf(field);\n          var indexEnd = indexBegin + field.length;\n\n          if (idx == 0) {\n            info.titleBegin = 0;\n          }\n          else {\n            info.titleBegin = indexBegin;\n          }\n\n          if (idx == fields.length - 1) {\n            info.titleEnd = line.length - 1;\n          }\n          else {\n            info.titleEnd = indexEnd;\n          }\n        }\n      });\n    }\n    else {\n      twoDimArray[index - 1] = line.split('');\n    }\n  });\n\n  // In the connected-domain aspect of view, all the blanks are connected, and all the non-blanks are connected.\n  var connectedDomains = ConnectedDomain(twoDimArray, function (value) {\n    if (EMPTY_EX.test(value)) {\n      return -1;\n    }\n    else {\n      return 1;\n    }\n  }, true);\n\n  // all the connected domains grouped if they are vertically overlapped.\n  var valuesDomainsVerticalGroups = [];\n\n  // sore the domain list make 'x' in ascending order, it will prevent the situation that:\n  // 1, two domains are not overlapped, so two groups are created for them at first\n  // 2, another domain is found overlapped with both of the domains at the first step.\n  // 3, In this situation the three groups have to be merged, which is complicated to implement.\n  //\n  // If the list is sorted in this order, this situation can't happen, because:\n  // - 1, If two non-overlapped domains A, B ( the \"x\" value of A less than B ) are found first.\n  // - 2, Since the list is in 'x' ascending order, the 'x' values of the following domains must larger or equal to the \"x\" of B, which means they will never overlapped with domain A.\n  // - 3, So this situation can't happen.\n  connectedDomains.domains.sort(function (a, b) {\n    return a.bounding.x - b.bounding.x;\n  });\n\n  // Group domains vertically overlapped.\n  connectedDomains.domains.forEach(function (domain) {\n    // only handle un-empty domain\n    if (domain.identifier === 1) {\n      var overlapped = false;\n\n      // If overlapped\n      valuesDomainsVerticalGroups.forEach(function (group) {\n        var bounding = domain.bounding;\n        var left = bounding.x;\n        var right = bounding.x + bounding.w;\n\n        if (overlap(left, right, group.begin, group.end)) {\n\n          overlapped = true;\n          group.domains.push(domain);\n          group.begin = group.begin > left ? left : group.begin;\n          group.end = group.end < right ? right : group.end;\n        }\n      });\n\n      // If not overlapped with any group, then create a new group\n      if (!overlapped) {\n        valuesDomainsVerticalGroups.push({\n          begin: domain.bounding.x,\n          end: domain.bounding.x + domain.bounding.w,\n          domains: [domain]\n        });\n      }\n    }\n  });\n\n  // connect all the groups to the title fields\n  valuesDomainsVerticalGroups.forEach(function (group) {\n    var title = null;\n    var info = null;\n    var overlapped = false;\n\n    var minimunLeftDistance = null;\n    var nearestLeftTitle = null;\n    var distance = null;\n\n    for (title in titleInfo) {\n      info = titleInfo[title];\n\n      /**\n       * The calculation below is to find the nearest left title field to the group, in case no overlapped title field found.\n       */\n      if (group.begin > info.titleBegin) {\n        distance = group.begin - info.titleBegin;\n\n        if (!nearestLeftTitle || ( distance < minimunLeftDistance )) {\n          nearestLeftTitle = title;\n          minimunLeftDistance = distance;\n        }\n      }\n\n      if (overlap(group.begin, group.end, info.titleBegin, info.titleEnd)) {\n\n        overlapped = true;\n        info.titleBegin = info.titleBegin > group.begin ? group.begin : info.titleBegin;\n        info.titleEnd = info.titleEnd < group.end ? group.end : info.titleEnd;\n      }\n    }\n\n    // Groups not match any title field belongs to the nearest left title field\n    if (!overlapped && nearestLeftTitle) {\n      var nearestTitleField = titleInfo[nearestLeftTitle];\n      nearestTitleField.titleBegin = nearestTitleField.titleBegin > group.begin ? group.begin : nearestTitleField.titleBegin;\n      nearestTitleField.titleEnd = nearestTitleField.titleEnd < group.end ? group.end : nearestTitleField.titleEnd;\n\n    }\n  });\n\n  // The final result\n  var result = [];\n\n  // Since we have got all the title bounding edges, we can split all the lines into values now\n  lines.forEach(function (line, index) {\n    // skip the first line\n    if (index > 0) {\n\n      var lineItem = {};\n      var title = null;\n      var info = null;\n      var value = null;\n      for (title in titleInfo) {\n        info = titleInfo[title];\n        value = line.substring(info.titleBegin, info.titleEnd + 1);\n        lineItem[title] = splitValue(value.trim());\n      }\n\n      result.push(lineItem);\n    }\n  });\n\n  return result;\n};\n\n/**\n * Test if two bounding overlapped vertically\n * @param begin1\n * @param end1\n * @param begin2\n * @param end2\n * @returns {boolean}\n */\nfunction overlap(begin1, end1, begin2, end2) {\n  return ( begin1 > begin2 && begin1 < end2 ) || // 2--1--2--1 or 2--1--1--2\n    ( end1 > begin2 && end1 < end2 ) ||     // 1--2--1--2 or 2--1--1--2\n    ( begin1 <= begin2 && end1 >= end2 );// 21--12 or 1--2--2--1\n}\n\n/**\n * transform a string value into array. It's not just split(), but also to consider some chunk that wrapped with `\"`, like below:\n *      \"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" --type=renderer --lang=zh-CN, `C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe` should be treated as a whole,\n *      also, be careful don't be mislead by format like `--name=\"neekey\"`, even more complicated: `--name=\"Neekey Ni\"`\n * so, `\"C:\\Program Files\\Internet Explorer\\iexplore.exe\" --name=\"Jack Neekey\"` should split into:\n *  - C:\\Program Files\\Internet Explorer\\iexplore.exe  // without `\"`\n *  - --name=\"Jack Neekey\"                             // with `\"`\n */\nfunction splitValue(value) {\n\n  var match = value.match(/\"/g);\n\n  // If only one \" found, then just ignore it\n  if (!match || match.length == 1) {\n    return value.split(/\\s+/);\n  }\n  else {\n    var result = [];\n    var chunk = null;\n    var ifInWrappedChunk = false;\n    var ifInPureWrappedChunk = false;\n    var quotaCount = 0;\n\n    // If the match length is a even, than nothing special, if a odd, ignore the last one.\n    var maxQuotaCount = match.length % 2 == 0 ? match.length : match.length - 1;\n\n    var previousItem = null;\n    var values = value.split('');\n\n    values.forEach(function (item, index) {\n\n      if (item !== ' ') {\n\n        if (item === '\"') {\n          // quota chunk begin\n          if (ifInWrappedChunk === false && quotaCount <= maxQuotaCount) {\n            ifInWrappedChunk = true;\n            quotaCount++;\n\n            // pure quota chunk begin\n            if (previousItem === ' ' || previousItem === null) {\n              ifInPureWrappedChunk = true;\n              chunk = '';\n            }\n            // normal continue\n            else {\n              chunk += item;\n            }\n          }\n          // quota chunk end\n          else if (ifInWrappedChunk === true) {\n            ifInWrappedChunk = false;\n            quotaCount++;\n\n            // pure quota chunk end\n            if (ifInPureWrappedChunk === true) {\n              ifInPureWrappedChunk = false;\n              result.push(chunk);\n              chunk = null;\n            }\n            // normal continue\n            else {\n              chunk += item;\n            }\n          }\n        }\n        // normal begin\n        else if (ifInWrappedChunk === false && ( previousItem === ' ' || previousItem === null )) {\n          chunk = item;\n        }\n        // normal or quota chunk continue.\n        else {\n          chunk += item;\n        }\n      }\n      // quota chunk continue, in quota chunk, blank is valid.\n      else if (ifInWrappedChunk) {\n        chunk += item;\n      }\n      // if not in quota chunk, them a blank means an end. But make sure chunk is exist, cause that could be blanks at the beginning.\n      else if (chunk !== null) {\n        result.push(chunk);\n        chunk = null;\n      }\n\n      previousItem = item;\n\n      // If this is the last one, but chunk is not end\n      if (index == ( values.length - 1 ) && chunk !== null) {\n        result.push(chunk);\n        chunk = null;\n      }\n    });\n\n    return result;\n  }\n}\n","import * as vscode from 'vscode';\nimport * as express from 'express';\nimport { resolveCliPathFromVSCodeExecutablePath } from 'vscode-test';\nimport { pathToFileURL, fileURLToPath } from 'url';\n\nconst { spawn } = require('child_process');\nconst EventEmitter = require('events');\n\nclass MyEmitter extends EventEmitter {}\n\nconst myEmitter = new MyEmitter()\n\nconst ps = require('ps-node')\n\n//declare then host variable for launching storybook\nconst host = \"localhost\"\n\nexport function activate(context: vscode.ExtensionContext) {\n\t// declare port and set to null => port to be changed later\n\t\tlet port = null;\n\n\t\tlet disposable : vscode.Disposable = vscode.commands.registerCommand('extension.aesopAwaken', () => {\n\t\t\t// grab the workspace root folder\n\t\t\tconst root = fileURLToPath(vscode.workspace.workspaceFolders[0].uri.toString(true));\n\t\t\t\n\t\t\t// look up currently running processes\n\t\t\tps.lookup({\n\t\t\t\tcommand: 'node',\n\t\t\t\tpsargs: 'ux',\n\t\t\t}, (err, resultList) => {\n\t\t\t\t// need to handle what to do incase of an error\n\t\t\t\tif (err) {\n\t\t\t\tthrow new Error(err);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// also need to handle what to do if no error but no process running at all\n\t\t\t\t//no process running also means story-book not running\n\n\t\t\t\telse {\n\t\t\t\t\t// set found storybook to false\n\t\t\t\t\tlet foundSb = false;\n\n\t\t\t\t\tresultList.forEach((process) => {\n\t\t\t\t\t\tif (process.arguments[0].includes('start-storybook')) {\n\t\t\t\t\t\t\tvscode.window.showInformationMessage(\"You have storybook currently running..!\")\n\t\t\t\t\t\t\tconst sbProcess = process.arguments;\n\t\t\t\t\t\t\tconst sbPortFlag = '-p'\n\t\t\t\t\t\t\tconst indexOfP = sbProcess.indexOf(sbPortFlag);\n\t\t\t\t\t\t\tif(indexOfP !== -1){\n\t\t\t\t\t\t\tconsole.log(`current sb port: ${sbProcess[indexOfP+1]}`);\n\t\t\t\t\t\t\tport = Number(`${sbProcess[indexOfP+1]}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(`port from lookup is: `, port);\n\t\t\t\t\t\t\t// change found storybook to true\n\t\t\t\t\t\t\tfoundSb = true;\n\t\t\t\t\t\t\t// event emitter will invoke the create webview function \n\t\t\t\t\t\t\tmyEmitter.emit('sb_on')\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// check if found storybook is still false => no storybook running\n\t\t\t\t\tif (foundSb === false) {\n\n\t\t\t\t\t\t// spin up storybook\n\t\t\t\t\t\tconst runSb = spawn('npm', ['run', 'storybook'], {cwd: root});\n\t\t\t\t\n\t\t\t\t\t\tvscode.window.showInformationMessage(\"We are now running storybook for you!\")\n\t\t\t\t\t\t// if error running sb throw an error\n\t\t\t\t\t\trunSb.on('error', function(err) {\n\t\t\t\t\t\t\tvscode.window.showInformationMessage(err);\n\t\t\t\t\t\t\tprocess.exit(1);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet counter = 0;\n\t\t\t\t\t\trunSb.stdout.setEncoding('utf8')\n\t\t\t\t\t\t// grab the stdout output\n\t\t\t\t\t\trunSb.stdout.on('data', (data) => {\n\t\t\t\t\t\tconsole.log(`stdout: ${data}`);\n\t\t\t\t\t\tlet str = data.toString(), lines = str.split(\" \");\n\t\t\t\t\t\t\t// declare a variable for the port flag\n\t\t\t\t\t\tconst sbPortFlag = '-p';\n\t\t\t\t\t\t\t// check if the port flag is in the stdout output\n\t\t\t\t\t\tif (lines.includes(sbPortFlag)){\n\t\t\t\t\t\t\tconst indexOfP = lines.indexOf(sbPortFlag);\n\t\t\t\t\t\t\t// if port flag is found then grab the port which is in the next index\n\t\t\t\t\t\t\tif(indexOfP !== -1) {\n\t\t\t\t\t\t\t\tport = parseInt(lines[indexOfP + 1])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(`stdout: ${data}`);\n\t\t\t\t\t\tconsole.log(`this is lines: `, lines)\n\t\t\t\t\t\tcounter += 1;\n\t\t\t\t\t\tif (counter === 3) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t// console.log('This is line 171:', lines[171]);\n\t\t\t\t\t\t\tconst path = lines[171];\n\t\t\t\t\t\t\t// console.log(typeof path, path)\n\t\t\t\t\t\t\tconst regExp = (/[^0-9]/g);\n\t\t\t\t\t\t\t// port = parseInt(path.replace(regExp, \"\"));\n\n\t\t\t\t\t\t\tvscode.window.showInformationMessage(`storybook is now running on port:`, port);\n\t\t\t\t\t\t\tmyEmitter.emit('sb_on')\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//This will make sure the child process is terminated on process exit\n\t\t\t\t\t\trunSb.on('close', (code) => {\n\t\t\t\t\t\tconsole.log(`child process exited with code ${code}`);\n\t\t\t\t\t\t});\n\t\t  \n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\t// event emitter to create webview panel\n\t\t\t\tmyEmitter.on('sb_on', ()=>{\n\t\t\t\t\t\n\t\t\t\t\tconst panel = vscode.window.createWebviewPanel(\n\t\t\t\t\t\t'aesop-sb',\n\t\t\t\t\t\t'Aesop',\n\t\t\t\t\t\tvscode.ViewColumn.Three,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tenableScripts: true,\n\t\t\t\t\t\t\tlocalResourceRoots: [vscode.Uri.file(context.extensionPath)]\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\n\t\t\t\t\t\n\t\t\t\t\tpanel.webview.html = `<!DOCTYPE html>\n\t\t\t\t\t<html lang=\"en\">\n\t\t\t\t\t<head>\n\t\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t\t\t<title>Aesop</title>\n\t\t\t\t\t<style>\n\t\t\t\t\thtml { width: 100%; height: 100%; min-width: 20%; min-height: 20%;}\n\t\t\t\t\tbody { display: flex; flex-flow: column nowrap; padding: 0; margin: 0; width: 100%' justify-content: center}\n\t\t\t\t\t</style>\n\t\t\t\t\t</head>\n\t\t\t\t\t<body id=\"root\">\n\t\t\t\t\n\t\t\t\t\t<iframe src=\"http://${host}:${port}/?path=/story/task--default\" width=\"100%\" height=\"500\"></iframe>\n\t\t\t\t\t<p>If you're seeing this, something is wrong :) (can't find server at ${host}:${port})</p>\n\t\t\t\t\t<span>Let's put some content here v61</span>\n\t\t\t\t\t</body>\n\t\t\t\t\t</html>`;\n\t\n\t\t\t\t});\n\t\n\t\n\t\t\tvscode.window.showInformationMessage(`Aesop is ready to chronicle your stories!`);\n\t\t\t})\n\t});\n\t\n\tcontext.subscriptions.push(disposable);\n\n\n\tdisposable = vscode.commands.registerCommand('extension.getStories', () => {\n\t\t//build a command that retrieves Storybook files on startup\n\t\t//can be executed later if Storybook server is spun up after the extension opens\n\t\t\n\t\t//also register this command at startup to crawl the file path\n\t\t// ${vscode.commands.executeCommand('extension.getStories')}\n\t\t// vscode.window.showInformationMessage('Aesop is reading from your Storybook.');\n\n\t\tconsole.log(vscode.Uri.file(fileURLToPath(`/node_modules/@storybook/core/dist/public`)));\n\n\t\t//define a path to SB webpack bundle outputs (in user workspace /node_modules/ folder)\n\t\tconst distGlob = new vscode.RelativePattern(vscode.workspace.workspaceFolders[0], \"**/node_modules/@storybook/core/dist/public\");\n\n\t\t//instantiate a watcher to listen for fs path changes (e.g. file creation/update)\n\t\t//bools = options for ignoreCreateEvents?, ignoreChangeEvents?, ignoreDeleteEvents?\n\t\t// observer.onDidChange = /*resolve*/;\t\t// observer.onDidCreate = /*resolve*/;\n\t\tconst observer = vscode.workspace.createFileSystemWatcher(distGlob, false, false, false);\n\t\t\n\t\t//extract index.html file that outputs into SB's preview pane\n\t\tconst htmlGlob = new vscode.RelativePattern(vscode.workspace.workspaceFolders[0], \"*/node_modules/@storybook/core/dist/public/*.html\");\n\t\t//extract necessary bundle scripts to leverage in-app dependencies\n\t\tconst scriptGlob = new vscode.RelativePattern(vscode.workspace.workspaceFolders[0], \"*/node_modules/@storybook/core/dist/public/*.js\");\n\t\t\n\t\t//do we need to resolve the Storybook UI script from the /dll/ folder?\n\t\t//if extract methods above fail, determine logic to parse out HTML/.js scripts (index 0?);\n\t\t//retrieve files with findFiles/relativeFilePath\n\t\tconst arrayOfScripts = vscode.workspace.findFiles(distGlob, null, 100);\n\n\t\t//dev check: have we successfully pulled down script files?\n\t\t//if so, should we then store them locally, or is there no point?\n\t\tif (arrayOfScripts !== undefined){\n\t\t\tvscode.window.showInformationMessage(\"Hey, dog: \" + `${arrayOfScripts}`);\n\t\t}\n\n\t\tvscode.window.showInformationMessage(`\n\t\trootPath: ${vscode.workspace.workspaceFolders[0]},\n\t\tvscode.Uri: ${vscode.Uri},\n\t\tworkspace: ${vscode.workspace},\n\t\tdistGlob: ${distGlob.toString()},\n\t\thtmlGlob: ${htmlGlob.toString()},\n\t\tscriptGlob: ${scriptGlob.toString()}\n\t\t`);\n\n\t\tconsole.log(`\n\t\trootPath: ${vscode.workspace.workspaceFolders[0]},\n\t\tvscode.Uri: ${vscode.Uri},\n\t\tworkspace: ${vscode.workspace},\n\t\tdistGlob: ${distGlob.toString()},\n\t\thtmlGlob: ${htmlGlob.toString()},\n\t\tscriptGlob: ${scriptGlob.toString()}\n\t\t`);\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"os\");","module.exports = require(\"url\");","module.exports = require(\"vscode\");"],"sourceRoot":""}