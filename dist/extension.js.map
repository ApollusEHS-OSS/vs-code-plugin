{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts","../external \"vscode\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PORT","context","disposable","vscode","commands","registerCommand","panel","window","createWebviewPanel","ViewColumn","Beside","enableScripts","portMapping","webviewPort","extensionHostPort","localResourceRoots","Uri","file","extensionPath","rootPath","workspace","workspaceFolders","distGlob","RelativePattern","arrayOfScripts","createFileSystemWatcher","findFiles","undefined","showInformationMessage","webview","html","getCommands","subscriptions","push","nowadays","Date","now","toTimeString","require"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as vscode from 'vscode';\n// import * as express from 'express';\n\n//port should be variable to listen for action in the user's active terminal\nconst PORT = 6006;\n// const server = express();\n\n// import MainUI from './toolbars/main_ui.ts';\n// import {server, PORT} from './server/server';\n\nexport function activate(context: vscode.ExtensionContext) {\n\t// server.get('/', (req : Object, res : Object) => {\n\t// \tvscode.window.showInformationMessage('Aesop server online');\n\t// \tres.end();\n\t// });\n\t// server.listen(PORT);\n\n\t//create disposable variable type, registers awaken command & opens webview\n\tlet disposable = vscode.commands.registerCommand('extension.aesopAwaken', () => {\n\t\tconst panel = vscode.window.createWebviewPanel(\n\t\t\t'aesop-sb',\n\t\t\t'Aesop',\n\t\t\tvscode.ViewColumn.Beside,\n\t\t\t{\n\t\t\t\tenableScripts: true,\n\t\t\t\tportMapping: [\n\t\t\t\t\t//should extensionHostPort be variable to enable remote machine access?\n\t\t\t\t\t//PORT is presently undefined\n\t\t\t\t\t//how to use express with a d.ts file\n\t\t\t\t\t{ webviewPort: PORT, extensionHostPort: PORT }\n\t\t\t\t],\n\t\t\t\t// (!) look in to workspace file system access\n\t\t\t\tlocalResourceRoots: [vscode.Uri.file(context.extensionPath)]\n\t\t\t}\n\t\t);\n\n\t\t//{\n\t\t//also register this command at startup to crawl the file path\n\t\t// ${vscode.commands.executeCommand('extension.getStories')}\n\t\t// vscode.window.showInformationMessage('Aesop is reading from your Storybook.');\n\t\t//}\n\n\t\t//access the first opened folder of the workspace array\n\t\t//a potentially problematic assumption in multi-folder workspaces\n\t\tconst rootPath : any = vscode.workspace.workspaceFolders[0];\n\n\t\t//define a path to SB webpack bundle outputs (in user workspace /node_modules/ folder)\n\t\tconst distGlob = new vscode.RelativePattern(rootPath, \"*/node_modules/@storybook/core/dist/public/\");\n\n\t\t//instantiate a watcher to listen for fs path changes (e.g. file creation/update)\n\t\t//bools = options for ignoreCreateEvents?, ignoreChangeEvents?, ignoreDeleteEvents?\n\t\tconst observer = vscode.workspace.createFileSystemWatcher(distGlob, false, false, false);\n\n\t\t//extract the index.html file that outputs into SB's preview pane\n\t\tconst htmlGlob = new vscode.RelativePattern(rootPath, \"*/node_modules/@storybook/core/dist/public/*.html\");\n\t\t//extract the necessary bundle scripts to leverage in-app dependencies\n\t\tconst scriptGlob = new vscode.RelativePattern(rootPath, \"*/node_modules/@storybook/core/dist/public/*.js\");\n\t\t\n\t\t//do we need to resolve the Storybook UI script from the /dll/ folder?\n\t\t//if extract methods above fail, determine logic to parse out HTML/.js scripts (index 0?);\n\n\t\t//retrieve files with findFiles/relativeFilePath\n\t\tconst arrayOfScripts = vscode.workspace.findFiles(distGlob, null, 100);\n\n\t\t//dev check: have we successfully pulled down script files?\n\t\t//if so, should we then store them locally, or is there no point?\n\t\tif (arrayOfScripts !== undefined){\n\t\t\tvscode.window.showInformationMessage(\"Hey, dog: \" + arrayOfScripts);\n\t\t}\n\n\t\t//use retrieved info to fill out our HTML template inside the webview\n\t\t//figure out how to use a tsx rule in webpack\n\t\t//signal to babel to interpret this block as tsx, e.g.\n\n\t\t//something like: @ tsx babel// (to determine syntax)\n\n\t\tpanel.webview.html = \n\t\t`<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t\t<title>Aesop</title>\n\t\t\t\t<style>\n\t\t\t\thtml { width: 100%, height: 100%, min-height: 100%; display: flex; padding: 0, margin: 0}\n\t\t\t\tbody { flex: 1; display: inline-flex; width: 100%, justify-content: center}\n\t\t\t\tiframe { flex: 1; border: none; background: white; min-width: 50%; max-height: 80%; vertical-align: center;}\n\t\t</style>\n\t\t</head>\n\t\t<body>\n\t\t\t\t<nav class=\"main_ui\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button></button>\n\t\t\t\t\t\t<button></button>\n\t\t\t\t\t\t<button></button>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t<iframe src=\"http://localhost:${PORT}\">\n\t\t\t\t<script>${arrayOfScripts}</script>\n\t\t\t\t</iframe>\n\t\t</body>\n\t\t</html>`;\n\n\t\tvscode.window.showInformationMessage(`Aesop is ready to chronicle your stories!\\n\\nPlease use a command to begin: ${vscode.commands.getCommands(true)}`);\n\t});\n\n\t//subscribe this extension to the disposable\n\tcontext.subscriptions.push(disposable);\n\n\t//break up subscription pushes, and register each command sequentially.\n\t//this lets us overwrite \"disposable,\" avoiding creation of unnecessary variables\n\tdisposable = vscode.commands.registerCommand('extension.tollTheHour', () => {\n\t\tconst nowadays = new Date(Date.now()).toTimeString();\n\t\tvscode.window.showInformationMessage(`The hour tolls: ${nowadays}`);\n\t});\n\tcontext.subscriptions.push(disposable);\n\n\tdisposable = vscode.commands.registerCommand('extension.getStories', () => {\n\t\t//business logic for generating the first instantiation of Storybook;\n\t\tvscode.window.showInformationMessage(`Aesop has read the script in your webview HTML!`);\n\t});\n\tcontext.subscriptions.push(disposable);\n}\n\nexport function deactivate(context: vscode.ExtensionContext) {\n\t\tvscode.window.showInformationMessage(`Aesop slumbers. Thank you for chronicling your Storybook with Aesop.`);\n}","module.exports = require(\"vscode\");"],"sourceRoot":""}